{"mappings":"khBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAgBC,SAASC,cAAc,qBACvCC,EAAeF,SAASC,cAAc,oBACtCE,EAAeC,aAAaC,QAAQ,WACpCC,EAAcF,aAAaC,QAAQ,UACnCE,EAAQP,SAASC,cAAc,yBAE/BO,EAAoBC,KAAKC,MAAMP,GAC/BQ,EAAmBF,KAAKC,MAAMJ,GAmEpC,SAASM,EAAiBC,GACxB,IAAIC,EAAcjB,EAAAkB,OAAOC,QAAO,SAACC,EAAGC,G,IAAIC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAI1C,OAHIP,EAAQQ,SAASF,IACnBF,EAAIK,KAAKF,GAEJH,IACN,IAKH,OAJIH,EAAYS,OAAS,IACvBT,EAAcA,EAAYU,MAAM,EAAG,IACvBF,KAAK,SAEZR,EA3ETW,OAAOC,iBAAiB,oBAcxB,WACMtB,aAAauB,WAdnB5B,EAAc2B,iBAAiB,SAG/B,WACEnB,EAAMqB,UAAY,GAgBVC,EAASrB,EAAkBsB,KAC/B,SAAAZ,G,IAAGC,EAAED,EAAFC,GAAIY,EAAKb,EAALa,MAAOC,EAAWd,EAAXc,YAAaC,EAASf,EAATe,UAAWC,EAAYhB,EAAZgB,aAAcC,EAAYjB,EAAZiB,aAC5CC,EAAkBxB,EAAiBqB,GAAWI,KAAK,MACzD,MAAO,+BACyDC,OAD1BnB,EAAG,6EAC2CmB,OAApBN,EAAY,UAEpDM,OAF4DP,EAAM,qEAI9DO,OAFJP,EAAM,6EAGHO,OADCF,EAAgB,8CAEtBE,OADKH,EAAaX,MAAM,EAAG,GAAG,yCACNc,OAAxBJ,EAAaK,QAAQ,GAAG,oEAO/CF,KAAK,IACR9B,EAAMiC,mBAAmB,YAAaX,GAnB1C,IACUA,KAnBV3B,EAAawB,iBAAiB,SAO9B,WACEnB,EAAMqB,UAAY,GAiCVC,EAASlB,EAAiBmB,KAC9B,SAAAZ,G,IAAGC,EAAED,EAAFC,GAAIY,EAAKb,EAALa,MAAOC,EAAWd,EAAXc,YAAaC,EAASf,EAATe,UAAWC,EAAYhB,EAAZgB,aAAcC,EAAYjB,EAAZiB,aAC5CC,EAAkBxB,EAAiBqB,GAAWI,KAAK,MACzD,MAAO,+BACyDC,OAD1BnB,EAAG,6EAC2CmB,OAApBN,EAAY,UAEpDM,OAF4DP,EAAM,qEAI9DO,OAFJP,EAAM,6EAGHO,OADCF,EAAgB,8CAEtBE,OADKH,EAAaX,MAAM,EAAG,GAAG,yCACNc,OAAxBJ,EAAaK,QAAQ,GAAG,oEAO/CF,KAAK,IACR9B,EAAMiC,mBAAmB,YAAaX,GAnB1C,IACUA,Q,kCCtDVY,EAAAC,QAAiBjC,KAAKC,MAAM,0iB","sources":["src/js/myLibrary.js","src/genres.json"],"sourcesContent":["import { genres } from '../genres.json';\nconst libWatchedBtn = document.querySelector('#lib__watched-btn');\nconst libQueuedBtn = document.querySelector('#lib__queued-btn');\nconst watchedFilms = localStorage.getItem('Watched');\nconst queuedFilms = localStorage.getItem('Queued');\nconst cards = document.querySelector('.container-movie-card');\n\nconst watchedFilmsArray = JSON.parse(watchedFilms);\nconst queuedFilmsArray = JSON.parse(queuedFilms);\n\n\nwindow.addEventListener('DOMContentLoaded', onPageLoad);\nlibWatchedBtn.addEventListener('click', onWatchedBtnClick);\nlibQueuedBtn.addEventListener('click', onQueuedBtnClick);\n\nfunction onWatchedBtnClick() {\n  cards.innerHTML = '';\n  renderWatchedFilmsFromStorage();\n}\n\nfunction onQueuedBtnClick() {\n  cards.innerHTML = '';\n  renderQueuedFilmsFromStorage();\n}\n\nfunction onPageLoad() {\n  if (localStorage.Watched) {\n    \n  }\n}\n\nfunction renderWatchedFilmsFromStorage() {\n    const markup = watchedFilmsArray.map(\n      ({ id, title, poster_path, genre_ids, vote_average, release_date }) => {\n        const filmsGenresList = getfilmsGenresUl(genre_ids).join(', ');\n        return `<div class=\"movie__card\" id=${id}>\n    <img class=\"movie__poster\" src=https://image.tmdb.org/t/p/original${poster_path} alt=\"${title}\">\n    <div class=\"movie__info\">\n       <p class=\"movie__name\">${title}</p>\n      <div class=\"movie__data\">\n       <span class=\"movie__genre\">${filmsGenresList}</span>\n       <span class=\"movie__year\">${release_date.slice(0, 4)}</span>\n       <span class=\"rating\">${vote_average.toFixed(1)}</span>\n       </div>\n       </div>\n       </div>\n       `;\n      }\n    )\n      .join('');\n    cards.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction renderQueuedFilmsFromStorage() {\n    const markup = queuedFilmsArray.map(\n      ({ id, title, poster_path, genre_ids, vote_average, release_date }) => {\n        const filmsGenresList = getfilmsGenresUl(genre_ids).join(', ');\n        return `<div class=\"movie__card\" id=${id}>\n    <img class=\"movie__poster\" src=https://image.tmdb.org/t/p/original${poster_path} alt=\"${title}\">\n    <div class=\"movie__info\">\n       <p class=\"movie__name\">${title}</p>\n      <div class=\"movie__data\">\n       <span class=\"movie__genre\">${filmsGenresList}</span>\n       <span class=\"movie__year\">${release_date.slice(0, 4)}</span>\n       <span class=\"rating\">${vote_average.toFixed(1)}</span>\n       </div>\n       </div>\n       </div>\n       `;\n      }\n    )\n      .join('');\n    cards.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction getfilmsGenresUl(genreId) {\n  let filmsGenres = genres.reduce((acc, { id, name }) => {\n    if (genreId.includes(id)) {\n      acc.push(name);\n    }\n    return acc;\n  }, []);\n  if (filmsGenres.length > 3) {\n    filmsGenres = filmsGenres.slice(0, 2);\n    filmsGenres.push('Other');\n  }\n  return filmsGenres;\n}\n\n\n","{\n  \"genres\": [\n    { \"id\": 28, \"name\": \"Action\" },\n    { \"id\": 12, \"name\": \"Adventure\" },\n    { \"id\": 16, \"name\": \"Animation\" },\n    { \"id\": 35, \"name\": \"Comedy\" },\n    { \"id\": 80, \"name\": \"Crime\" },\n    { \"id\": 99, \"name\": \"Documentary\" },\n    { \"id\": 18, \"name\": \"Drama\" },\n    { \"id\": 10751, \"name\": \"Family\" },\n    { \"id\": 14, \"name\": \"Fantasy\" },\n    { \"id\": 36, \"name\": \"History\" },\n    { \"id\": 27, \"name\": \"Horror\" },\n    { \"id\": 10402, \"name\": \"Music\" },\n    { \"id\": 9648, \"name\": \"Mystery\" },\n    { \"id\": 10749, \"name\": \"Romance\" },\n    { \"id\": 878, \"name\": \"Science Fiction\" },\n    { \"id\": 10770, \"name\": \"TV Movie\" },\n    { \"id\": 53, \"name\": \"Thriller\" },\n    { \"id\": 10752, \"name\": \"War\" },\n    { \"id\": 37, \"name\": \"Western\" }\n  ]\n}"],"names":["$fKcg4","parcelRequire","$220f61a1ea70617b$var$libWatchedBtn","document","querySelector","$220f61a1ea70617b$var$libQueuedBtn","$220f61a1ea70617b$var$watchedFilms","localStorage","getItem","$220f61a1ea70617b$var$queuedFilms","$220f61a1ea70617b$var$cards","$220f61a1ea70617b$var$watchedFilmsArray","JSON","parse","$220f61a1ea70617b$var$queuedFilmsArray","$220f61a1ea70617b$var$getfilmsGenresUl","genreId","filmsGenres","genres","reduce","acc","param","id","name","includes","push","length","slice","window","addEventListener","Watched","innerHTML","markup","map","title","poster_path","genre_ids","vote_average","release_date","filmsGenresList","join","concat","toFixed","insertAdjacentHTML","module","exports"],"version":3,"file":"myLibrary.64d77088.js.map"}