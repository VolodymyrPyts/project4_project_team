{"mappings":"sgBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAgBC,SAASC,cAAc,qBACvCC,EAAeF,SAASC,cAAc,oBACtCE,EAAeC,aAAaC,QAAQ,WACpCC,EAAcF,aAAaC,QAAQ,UACnCE,EAAQP,SAASC,cAAc,yBAE/BO,EAAoBC,KAAKC,MAAMP,GAC/BQ,EAAmBF,KAAKC,MAAMJ,GAmEpC,SAASM,EAAiBC,GACxB,IAAIC,EAAcjB,EAAAkB,OAAOC,QAAO,CAACC,GAAKC,GAAEA,EAAEC,KAAEA,MACtCN,EAAQO,SAASF,IACnBD,EAAII,KAAKF,GAEJF,IACN,IAKH,OAJIH,EAAYQ,OAAS,IACvBR,EAAcA,EAAYS,MAAM,EAAG,GACnCT,EAAYO,KAAK,UAEZP,EA3ETU,OAAOC,iBAAiB,oBAcxB,WACMrB,aAAasB,WAdnB3B,EAAc0B,iBAAiB,SAG/B,WACElB,EAAMoB,UAAY,GAepB,WACI,MAAMC,EAASpB,EAAkBqB,KAC/B,EAACX,GAAEA,EAAEY,MAAEA,EAAKC,YAAEA,EAAWC,UAAEA,EAASC,aAAEA,EAAYC,aAAEA,KAE3C,+BAA+BhB,6EAC0Ba,UAAoBD,qEAE5DA,6EAJAlB,EAAiBoB,GAAWG,KAAK,kDAO9BD,EAAaX,MAAM,EAAG,0CAC3BU,EAAaG,QAAQ,oEAO5CD,KAAK,IACR5B,EAAM8B,mBAAmB,YAAaT,GAjCxCU,MAJFpC,EAAauB,iBAAiB,SAO9B,WACElB,EAAMoB,UAAY,GAgCpB,WACI,MAAMC,EAASjB,EAAiBkB,KAC9B,EAACX,GAAEA,EAAEY,MAAEA,EAAKC,YAAEA,EAAWC,UAAEA,EAASC,aAAEA,EAAYC,aAAEA,KAE3C,+BAA+BhB,6EAC0Ba,UAAoBD,qEAE5DA,6EAJAlB,EAAiBoB,GAAWG,KAAK,kDAO9BD,EAAaX,MAAM,EAAG,0CAC3BU,EAAaG,QAAQ,oEAO5CD,KAAK,IACR5B,EAAM8B,mBAAmB,YAAaT,GAlDxCW,S,kCCtBFC,EAAAC,QAAiBhC,KAAKC,MAAM,0iB","sources":["src/js/myLibrary.js","src/genres.json"],"sourcesContent":["import { genres } from '../genres.json';\nconst libWatchedBtn = document.querySelector('#lib__watched-btn');\nconst libQueuedBtn = document.querySelector('#lib__queued-btn');\nconst watchedFilms = localStorage.getItem('Watched');\nconst queuedFilms = localStorage.getItem('Queued');\nconst cards = document.querySelector('.container-movie-card');\n\nconst watchedFilmsArray = JSON.parse(watchedFilms);\nconst queuedFilmsArray = JSON.parse(queuedFilms);\n\n\nwindow.addEventListener('DOMContentLoaded', onPageLoad);\nlibWatchedBtn.addEventListener('click', onWatchedBtnClick);\nlibQueuedBtn.addEventListener('click', onQueuedBtnClick);\n\nfunction onWatchedBtnClick() {\n  cards.innerHTML = '';\n  renderWatchedFilmsFromStorage();\n}\n\nfunction onQueuedBtnClick() {\n  cards.innerHTML = '';\n  renderQueuedFilmsFromStorage();\n}\n\nfunction onPageLoad() {\n  if (localStorage.Watched) {\n    \n  }\n}\n\nfunction renderWatchedFilmsFromStorage() {\n    const markup = watchedFilmsArray.map(\n      ({ id, title, poster_path, genre_ids, vote_average, release_date }) => {\n        const filmsGenresList = getfilmsGenresUl(genre_ids).join(', ');\n        return `<div class=\"movie__card\" id=${id}>\n    <img class=\"movie__poster\" src=https://image.tmdb.org/t/p/original${poster_path} alt=\"${title}\">\n    <div class=\"movie__info\">\n       <p class=\"movie__name\">${title}</p>\n      <div class=\"movie__data\">\n       <span class=\"movie__genre\">${filmsGenresList}</span>\n       <span class=\"movie__year\">${release_date.slice(0, 4)}</span>\n       <span class=\"rating\">${vote_average.toFixed(1)}</span>\n       </div>\n       </div>\n       </div>\n       `;\n      }\n    )\n      .join('');\n    cards.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction renderQueuedFilmsFromStorage() {\n    const markup = queuedFilmsArray.map(\n      ({ id, title, poster_path, genre_ids, vote_average, release_date }) => {\n        const filmsGenresList = getfilmsGenresUl(genre_ids).join(', ');\n        return `<div class=\"movie__card\" id=${id}>\n    <img class=\"movie__poster\" src=https://image.tmdb.org/t/p/original${poster_path} alt=\"${title}\">\n    <div class=\"movie__info\">\n       <p class=\"movie__name\">${title}</p>\n      <div class=\"movie__data\">\n       <span class=\"movie__genre\">${filmsGenresList}</span>\n       <span class=\"movie__year\">${release_date.slice(0, 4)}</span>\n       <span class=\"rating\">${vote_average.toFixed(1)}</span>\n       </div>\n       </div>\n       </div>\n       `;\n      }\n    )\n      .join('');\n    cards.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction getfilmsGenresUl(genreId) {\n  let filmsGenres = genres.reduce((acc, { id, name }) => {\n    if (genreId.includes(id)) {\n      acc.push(name);\n    }\n    return acc;\n  }, []);\n  if (filmsGenres.length > 3) {\n    filmsGenres = filmsGenres.slice(0, 2);\n    filmsGenres.push('Other');\n  }\n  return filmsGenres;\n}\n\n\n","{\n  \"genres\": [\n    { \"id\": 28, \"name\": \"Action\" },\n    { \"id\": 12, \"name\": \"Adventure\" },\n    { \"id\": 16, \"name\": \"Animation\" },\n    { \"id\": 35, \"name\": \"Comedy\" },\n    { \"id\": 80, \"name\": \"Crime\" },\n    { \"id\": 99, \"name\": \"Documentary\" },\n    { \"id\": 18, \"name\": \"Drama\" },\n    { \"id\": 10751, \"name\": \"Family\" },\n    { \"id\": 14, \"name\": \"Fantasy\" },\n    { \"id\": 36, \"name\": \"History\" },\n    { \"id\": 27, \"name\": \"Horror\" },\n    { \"id\": 10402, \"name\": \"Music\" },\n    { \"id\": 9648, \"name\": \"Mystery\" },\n    { \"id\": 10749, \"name\": \"Romance\" },\n    { \"id\": 878, \"name\": \"Science Fiction\" },\n    { \"id\": 10770, \"name\": \"TV Movie\" },\n    { \"id\": 53, \"name\": \"Thriller\" },\n    { \"id\": 10752, \"name\": \"War\" },\n    { \"id\": 37, \"name\": \"Western\" }\n  ]\n}"],"names":["$eRClg","parcelRequire","$4579d646e857668e$var$libWatchedBtn","document","querySelector","$4579d646e857668e$var$libQueuedBtn","$4579d646e857668e$var$watchedFilms","localStorage","getItem","$4579d646e857668e$var$queuedFilms","$4579d646e857668e$var$cards","$4579d646e857668e$var$watchedFilmsArray","JSON","parse","$4579d646e857668e$var$queuedFilmsArray","$4579d646e857668e$var$getfilmsGenresUl","genreId","filmsGenres","genres","reduce","acc","id","name","includes","push","length","slice","window","addEventListener","Watched","innerHTML","markup","map","title","poster_path","genre_ids","vote_average","release_date","join","toFixed","insertAdjacentHTML","$4579d646e857668e$var$renderWatchedFilmsFromStorage","$4579d646e857668e$var$renderQueuedFilmsFromStorage","module","exports"],"version":3,"file":"myLibrary.f041af77.js.map"}